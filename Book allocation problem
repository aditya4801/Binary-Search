class Solution 
{
    public:
    
    bool isPossible(int A[], int N, int M, int mid){
      int pageSum= 0;
      int studCount=1;
      
      for(int i=0; i<N; i++){
         if(pageSum + arr[i] < mid){
            pageSum+= arr[i]; 
        }
        else{
          studCount++;
          if(pageSum > M && A[i]> mid){
          return false;
          }
         pageSum+= A[i];
        }
      }
      return true;
    }
    //Function to find minimum number of pages.
    int findPages(int A[], int N, int M) 
    {
        int s=0;
        int sum= 0;
        
        for(int i=0; i<N;i++){
          sum+=A[i]; 
        }
        int e= sum;
        int ans= -1;
        int mid= s+ (e-s)/2;
        
        while(s<=e){
          if(isPossible(A, N , M ,mid){
            end= mid-1;
          }
          else{
           s= mid+1;
          }
          mid = s + (e-s)/2;
        }
        return ans;
    }
};
